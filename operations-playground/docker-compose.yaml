version: "3.7"
services:
  client:
    build: ../docker/ops-playground-image
    image: felipeogutierrez/explore-flink:1.11.2-scala_2.12
    command: "flink run -d -p 4 /opt/flink/usrlib/explore-flink.jar -app 36 -disableOperatorChaining true -output file"
    depends_on:
      - jobmanager
      - kafka
      - tpch-dbgen
    volumes:
      - ./conf:/opt/flink/conf
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  clickevent-generator:
    image: felipeogutierrez/explore-flink:1.11.2-scala_2.12
    command: "java -classpath /opt/explore-flink.jar:/opt/flink/lib/* org.sense.flink.App -app 39"
    depends_on:
      - kafka
      - client
  tpch-dbgen:
    build: ../docker/tpch-dbgen
    image: felipeogutierrez/tpch-dbgen
    volumes:
      - tpch-dbgen-data:/opt/tpch-dbgen/data/
      - datarate:/tmp/
    stdin_open: true
  jobmanager:
    image: flink:1.11.2-scala_2.12
    command: "jobmanager.sh start-foreground"
    hostname: "jobmanager"
    expose:
      - "6123"
      - "9250"
      - "9251"
    ports:
      - 8081:8081
    volumes:
      - ./conf:/opt/flink/conf
      - flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    restart: always
  taskmanager-01:
    image: flink:1.11.2-scala_2.12
    hostname: "taskmanager-01"
    expose:
      - "6121"
      - "6122"
      - "9250"
    depends_on:
      - jobmanager
      - tpch-dbgen
    command: "taskmanager.sh start-foreground"
    links:
      - jobmanager:jobmanager
    volumes:
      - ./conf:/opt/flink/conf
      - flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
      - datarate:/tmp/
      - tpch-dbgen-data:/opt/tpch-dbgen/data/
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    restart: always
  taskmanager-02:
    image: flink:1.11.2-scala_2.12
    hostname: "taskmanager-02"
    expose:
      - "6121"
      - "6122"
      - "9250"
    depends_on:
      - jobmanager
      - tpch-dbgen
    command: "taskmanager.sh start-foreground"
    links:
      - jobmanager:jobmanager
    volumes:
      - ./conf:/opt/flink/conf
      - flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
      - datarate:/tmp/
      - tpch-dbgen-data:/opt/tpch-dbgen/data/
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    restart: always
  taskmanager-03:
    image: flink:1.11.2-scala_2.12
    hostname: "taskmanager-03"
    expose:
      - "6121"
      - "6122"
      - "9250"
    depends_on:
      - jobmanager
      - tpch-dbgen
    command: "taskmanager.sh start-foreground"
    links:
      - jobmanager:jobmanager
    volumes:
      - ./conf:/opt/flink/conf
      - flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - /tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
      - datarate:/tmp/
      - tpch-dbgen-data:/opt/tpch-dbgen/data/
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    restart: always
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    restart: always
  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "input:2:1, output:2:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9094:9094
    restart: always
  prometheus:
    image: prom/prometheus
    hostname: "prometheus"
    ports:
      - "9090:9090"
    volumes:
      - ../docker/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: always
  grafana:
    image: grafana/grafana
    hostname: "grafana"
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    volumes:
      - ../docker/grafana-spend-report-init/provisioning/:/etc/grafana/provisioning/
      - ../docker/grafana-spend-report-init/dashboard.json:/etc/grafana/dashboard.json
      - ../docker/grafana-spend-report-init/grafana.ini:/etc/grafana/grafana.ini
    restart: always
volumes:
  flink-checkpoints-directory:
  tpch-dbgen-data:
  datarate:
